@model Musique.Models.Music

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div id="deletedfile">
</div>

@using (Html.BeginForm("Edit", "Musics", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Music</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

		<div class="row">
			<div class=" col-md-6">
				<div class="form-group">
					@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Album, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Album, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Album, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					<label for="files" class="control-label col-md-2">Upload your files</label>
					<div class="col-md-10">
						<input type="file" name="files" accept=".wav,.mp3,.wma,.m4a" multiple />
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			</div>
			<div class="col-md-6">
				@foreach (var file in Directory.GetFiles("C:/Users/Fanny/Source/Repos/musique/Musique/Musique/Data", Model.ID + ".*"))
				{
					String fst = Path.GetFileNameWithoutExtension(file);
					String snd = Path.GetExtension(file);
					String title = fst + snd.Substring(1);
					<div id="@Path.GetFileName(file)">
						<div>@Path.GetExtension(file)</div>
						<a href="#" data-toggle="modal" data-target="#modaldelete@(title)">Delete</a>
						<div id="modaldelete@(title)" class="modal fade" role="dialog">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<button type="button" class="close" data-dismiss="modal">&times;</button>
										<h4 class="modal-title">Are you sure you want to delete this file ?</h4>
									</div>
									<div class="modal-body">
										<dl class="dl-horizontal">
											<dt>Extension</dt>

											<dd>@Path.GetExtension(file)</dd>

										</dl>
									</div>
									<div class="modal-footer">
										<button type="button" class="delete btn btn-danger" value="@Path.GetFileName(file)" data-id="@title">Delete</button>
										<button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" defer>
	$(document).ready(function () {
		$('button.delete').on('click', function () {
			var file = $(this).val();
			var id = $(this).attr('data-id');
			$.ajax({
				method: "POST",
				url: "/Musics/DeleteFile",
				data: { file: file }
			}).done(function (response) {
				$('#deletedfile').html(response);
				$('#modaldelete' + id).modal('hide');
				$('#' + file).addClass('hidden');
			});
		});
	});
</script>
